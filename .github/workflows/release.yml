on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create a release

jobs:
  build:
    name: Create a release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: mymindstorm/setup-emsdk@v12
        with: { version: "3.1.47" }
      - run: npm ci
      - name: build
        run: npm run build
      - name: test
        run: npm test
      - run: cp build/highs.* demo/
      - name: Deploy demo ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: demo
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (wasm)
        uses: lovasoa/upload-release-asset@851d9cc59fe8113912edffbd8fddaa09470a5ac0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/highs.wasm
          asset_name: highs.wasm
          asset_label: highs.wasm (the core application, HiGHS compiled to WASM)
          asset_content_type: application/wasm
      - name: Upload Release Asset (js)
        uses: lovasoa/upload-release-asset@851d9cc59fe8113912edffbd8fddaa09470a5ac0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/highs.js
          asset_name: highs.js
          asset_label: highs.js (javascript binding, that downloads and executes the WASM)
          asset_content_type: application/javscript
      - name: publish the package to NPM
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
